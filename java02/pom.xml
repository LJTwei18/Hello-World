<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
        http://maven.apache.org/maven-v4_0_0.xsd">
  <!--指定pom的模型版本-->
  <modelVersion>4.0.0</modelVersion>
  <!--组织id-->
  <groupId>org.example</groupId>
  <!--项目id-->
  <artifactId>java02</artifactId>
  <!--打包方式：web工程打包为war,java工程打包为jar-->
  <packaging>war</packaging>
  <!--版本号:release-完成版，snapshot-开发版-->
  <version>1.0-SNAPSHOT</version>
  <url>http://maven.apache.org</url>

  <!--设置工程的所有依赖-->
  <dependencies>

    <!--具体的依赖-->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.2</version>
      <!--依赖范围：分别有主代码、测试代码和是否参与打包。
      compile：YYY
      text:NYN
      provided:YYN
      runtime:NNY-->
      <scope>test</scope>
      <!--隐藏依赖：当别的项目引用该项目时，这个依赖是否隐藏。false:不隐藏，true:隐藏-->
      <optional>false</optional>
      <!--
      &lt;!&ndash;排除依赖：把该依赖中不需要的子依赖隐藏掉，可以同时排除多个&ndash;&gt;
      <exclusions>
        <exclusion>
          <groupId>org.hamcrest</groupId>
          <artifactId>hamcrest-core</artifactId>
        </exclusion>
      </exclusions>-->
    </dependency>

    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.12</version>
    </dependency>
  </dependencies>

  <!--构建-->
  <build>
    <!--设置插件-->
    <plugins>
      <!--具体的插件配置-->
      <plugin>
        <!--https://mvnrepository.com/artifact/org.apache.tomcat.maven/tomcat7-maven-plugin-->
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <version>2.1</version>
        <configuration>
          <port>80</port>
          <path>/</path>
        </configuration>
      </plugin>
      <!--打源码的插件-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.2.1</version>
        <!--执行的操作-->
        <executions>
          <!--单个操作-->
          <execution>
            <goals>
              <!--这个插件的哪个操作，可以是多个操作-->
              <goal>jar</goal>
              <goal>test-jar</goal>
            </goals>
            <!--执行这个操作的时机：生命周期-->
            <phase>generate-test-resources</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
